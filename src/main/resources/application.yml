# application.yml
spring:
  application:
    name: goormthon-server

  # ???? ??
  profiles:
    active: ${APP_ENV:development}

  # ?????? ??
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:jeju_audio_guide}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USER:developer}
    password: ${DB_PASSWORD:devpassword123!}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA ??
  jpa:
    hibernate:
      ddl-auto: validate  # ???? ?? ??????? validate?
    show-sql: ${LOG_LEVEL:INFO} == 'DEBUG'
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false

  # Redis ??
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # ?? ??? ??
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# ?? ??
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true

# ?? API ??
external-api:
  jeju-visit:
    url: ${JEJU_VISIT_API_URL:https://api.visitjeju.net}
    key: ${JEJU_VISIT_API_KEY:your_key_here}
    timeout: 10000

  llm:
    url: ${LLM_API_URL:https://api.openai.com/v1}
    key: ${LLM_API_KEY:your_key_here}
    timeout: 30000
    model: gpt-3.5-turbo

  naver-tts:
    url: ${NAVER_TTS_API_URL:https://naveropenapi.apigw.ntruss.com/tts-premium/v1/tts}
    client-id: ${NAVER_CLIENT_ID:your_client_id}
    client-secret: ${NAVER_CLIENT_SECRET:your_client_secret}
    timeout: 30000

# AWS S3 ??
aws:
  s3:
    access-key: ${AWS_ACCESS_KEY_ID:your_access_key}
    secret-key: ${AWS_SECRET_ACCESS_KEY:your_secret_key}
    region: ${AWS_REGION:ap-northeast-2}
    bucket: ${AWS_S3_BUCKET:jeju-audio-guide-bucket}

# JWT ??
jwt:
  secret: ${JWT_SECRET:your_jwt_secret_key_here}
  expiration: 86400000 # 24??

# ?? ??
logging:
  level:
    com.jeju.audioguide: ${LOG_LEVEL:INFO}
    org.springframework.web: ${LOG_LEVEL:INFO}
    org.hibernate.SQL: ${LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Swagger/OpenAPI ??
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
  show-actuator: true

# ????? ?? (????)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

---
# ?? ?? ??
spring:
  config:
    activate:
      on-profile: development
  jpa:
    show-sql: true
logging:
  level:
    com.jeju.audioguide: DEBUG
    org.springframework.web: DEBUG

---
# ?? ?? ??
spring:
  config:
    activate:
      on-profile: production
  jpa:
    show-sql: false
logging:
  level:
    com.jeju.audioguide: INFO
    root: WARN