plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mycompany'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'com.h2database:h2'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // AWS SDK
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.565'

    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // HTTP Client for External APIs
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'com.h2database:h2'  // 테스트용 H2 데이터베이스
    testImplementation 'it.ozimov:embedded-redis:0.7.3'  // 테스트용 임베디드 Redis


    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
}

// 프로파일별 빌드 설정
tasks.named('bootJar') {
    archiveFileName = 'app.jar'
}
// 테스트 설정
tasks.named('test') {
    useJUnitPlatform()

    // 테스트용 프로파일 설정
    systemProperty 'spring.profiles.active', 'test'

    // 테스트 메모리 설정
    maxHeapSize = '512m'

    // 테스트 결과 보고서
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

task dockerBuildFreeTier(type: Exec) {
    group = 'docker'
    description = 'Build Docker image optimized for AWS Free Tier'

    commandLine 'docker', 'build',
            '--build-arg', 'SPRING_PROFILES_ACTIVE=freetier',
            '-t', "${project.name}:freetier",
            '-f', 'Dockerfile.freetier',
            '.'
}